/** Global Styles End **/
:root {
    /* Setting root font size to make calculations easier when using rem */
    font-size: 62.5%;

    /* CSS variables section */
    --color-primary: #0F56B3;
    --color-primary-variant-1: #C5DCFA;
    --color-secondary: #FFFFFF;
    --color-background: #F2F8FF;
    --color-accent: #BF710F;
    --color-accent-variant-1: #FBE5C9;
    --color-text: #000000;
}
/* This is to avoid having to calculate margin and padding sizes whenever setting dimension for individual elements. */
* {
    box-sizing: border-box;
}
html, body {
    height: 100%;
    margin: 0;
    padding: 0;
}
body {
    font-family: 'IBM Plex Sans', sans-serif;
    background: var(--color-background);

    /* Reducing font size on root will remove the meaningful sizes set by the browsers for other elements. To reverse the size, Set the body font-size using rem to equalize the effect.
     */
    font-size: 1.6rem;
}
button {
    border: none;
}
.button {
    border-radius: 8px;
    box-shadow: 0px 1px 2px rgba(15, 86, 179, 0.2), 0px 2px 4px rgba(15, 86, 179, 0.2);
    min-width: 108px;
    min-height: 48px;
    font-size: 1.6rem;
    font-weight: 700;
    cursor: pointer;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-evenly;
}
.button--large {
    min-width: 135px;
}
.button--primary {
    background: var(--color-primary);
    color: var(--color-primary-variant-1);
}
.button--secondary {
    background: var(--color-secondary);
    color: var(--color-primary);
    border: 1px solid #C0C0C0;
}
/* Setting this will let the SVG to inherit the fill color from the parent's color property. This is perfect for icons. */
svg {
    fill: currentColor;
}
.container {
    /* Margin setting was not consistent in the given Figma, so I just eyeballed and used a reasonable spacing. */
    padding: 45px;
    display: flex;
    flex-direction: column;
    width: 100%;
    min-height: 100%;
}
.nav {
    font-size: 4.8rem;
    margin: 0;
}
.content {
    /* To let the element take full available height */
    flex-grow: 1;
}
/** Global Styles End **/

/** Welcome screen Start **/
.welcome {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    margin: 0 auto 200px auto;
    flex-grow: 1;
}
.welcome > h1 {
    font-size: 6rem;
    margin: 5px 0;
}
.welcome > p {
    font-size: 1.6rem;
    font-weight: 700;
    margin: 5px 0 20px 0;
}

/** Welcome Screens End **/

/** Survey screens start **/
.survey {
    padding-top: 68px;
}
.survey__question {
    font-size: 3.4rem;
    font-weight: 600;
}
.survey__answer {
    display: inline-flex;
    margin-top: 28px;
}
.survey__answer input[type="radio"] {
    display: none;
}
.survey__answer--boolean {
    flex-direction: column;
}
.survey__answer--boolean label {
    font-size: 1.6rem;
    font-weight: 300;
    cursor: pointer;
/*    For background image position*/
    padding: 25px 10px 25px 45px;
    background: url("icons/radio-unchecked.svg") 0px no-repeat;
}
.survey__answer--boolean input[type="radio"]:checked + label {
    background: url("icons/radio-checked.svg") 0px no-repeat;
}
.survey__answer--rating {
    align-items: center;
    justify-content: center;
    height: 40px;
    padding: 0 4px;
    border-radius: 14px;
    background: var(--color-accent-variant-1);
    box-shadow: 0px 2px 4px 0px rgba(97, 97, 97, 0.2) inset;
    box-shadow: 0px 1px 2px 0px rgba(97, 97, 97, 0.2) inset;
}
.survey__answer--rating input[type="radio"] + label {
    padding: 8px 12px;
    border-radius: 12px;
    color: var(--color-accent);
    cursor: pointer;
}
.survey__answer--rating input[type="radio"]:checked + label {
    background: var(--color-secondary);
    color: var(--color-text);
    box-shadow: 0px 1px 2px rgba(191, 113, 15, 0.2), 0px 2px 4px rgba(191, 113, 15, 0.2);
}
.survey__answer--text > textarea {
    /*To force webkit's rendering engine to let us set box shadow for textarea*/
    -webkit-appearance: none;
    box-shadow: 3px 2px 4px 0px rgba(0, 0, 0, 0.08) inset;
    resize: none;
    padding: 16px;
    font-size: 1.2rem;
    border: 0.2px solid rgba(158, 158, 158, 1);
    outline: none;
}
.survey__answer--text > textarea::placeholder {
    font-size: 1.2rem;
    font-weight: 400;
    color: var(--color-text);
}
.actions {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}
/** Survey screens End **/

/** Thanks screen starts **/
.thanks {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}
.thanks__icon {
    width: 120px;
    height: 120px;
    background: var(--color-secondary);
    border: 2px solid rgba(192, 192, 192, 1);
    border-radius: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
}
.thanks__title {
    font-size: 3.4rem;
    font-weight: 600;
    color: #414141;
    margin-bottom: 15px;
}
.thanks__subtitle {
    font-size: 2rem;
    font-weight: 600;
    color: #818181;
    margin-top: 0;
}
/** Thanks screen end **/

/** Responsive design media queries start **/

/**
Media queries can become really hard and filled with nuances especially when using min and max-width. I don't have an iphone or a high end phone to test the design. I'm sure the pixes ration difference on high end phones might make this design look bad, but it will be usable, without any elements hidden from the viewport.

 There is no one fit for all and it will be really hard to target all different devices with this approach.  I would start with mobile first approach if the site is to be responsive. It is easier to let things take available space on larger screens. But the given design was for desktop. So I designed desktop first and now changing for smaller screens.

 This list is not exhaustive and can only be considered as a decent starting point in desktop-first approach. I did not designed anything for wearable devices or foldable devices yet. My understanding of designing for them is limited.

 The content of the app is very simple, so I am able to a decent look with very less media targets and changes. This mostly depends on the app and some apps might need a lot of work on media queries when we want to shift things around and prefer different layout on different screens.
 **/
/* Landscape phones and down */
@media (max-width: 480px) {
    .container {
        padding: 20px;
    }
    .nav {
        font-size: 3.8rem;
    }
    .welcome {
        margin: unset;
    }
    .welcome > h1 {
        font-size: 5rem;
    }
    .survey__question {
        font-size: 2.5rem;
    }
    .survey__answer {
        margin-top: 15px;
    }
    .survey__answer--rating input[type="radio"] + label {
        padding: 8px 10px;
        font-size: 1.5rem;
    }
    .survey__answer--boolean label {
        padding: 15px 10px 15px 45px;
    }
    .thanks__subtitle {
        font-size: 1.8rem;
    }
}

/* portrait tablet*/
@media (max-width: 767px) {
    .survey__answer--text > textarea {
        width: 100%;
    }
}

/* Landscape mobiles and tablets */
@media (max-width: 830px) and (orientation: landscape) {
    :root {
        font-size: 50%;
    }
    .container {
        padding: 20px;
    }
    .welcome {
        margin: 0 auto;
    }
    .survey {
        padding-top: 10px;
    }
    .survey__question {
        font-size: 2rem;
    }
    .survey__answer {
        margin-top: 8px;
    }
    .survey__answer--boolean label {
        padding: 15px 10px 15px 45px;
    }
    .survey__answer--text > textarea {
        width: 75%;
    }
}
